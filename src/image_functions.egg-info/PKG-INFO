Metadata-Version: 2.1
Name: image-functions
Version: 0.1.1
Summary: Image Processing Functions
Author-email: Marlon Rodrigues Garcia <marlon.garcia@unesp.br>
License: MIT License
        
        Copyright (c) 2023 Marlon Rodrigues Garcia
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/MarlonGarcia/imfun
Keywords: image processing,digital image,image functions
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
License-File: LICENSE.rst
Requires-Dist: numpy
Requires-Dist: opencv-contrib-python
Requires-Dist: matplotlib
Requires-Dist: scipy
Requires-Dist: pynput
Requires-Dist: pandas

# Image Functions Library

Library for image pre-processing, with functions to handle and prepare images for machine learning and image processing. This library accounts for functions to load and plot a group of images, pre-processing, choose ROI regions (even polygonal), choose points, get image properties, align and transform images (including rotate, scale, etc.), filter signals and images (2D data), among others. All the functions with GUI (stands for graphical user interface) have an interface to interact with the user.


### 1. Functions to Load and Plot

- `load_gray_images`: loads all images from a folder, in grayscale
- `load_color_images`: loads all color images from a folder
- `plot_gray_images`: prints all grayscale images from a variable 'I'
- `plot_color_images`: prints all color images from a variable 'I'
- `plot_gray`: prints a grayscale image
- `plot_bgr`: prints a color image in BGR format


### 2. Pre-Processing for Machine Learning and Computer Vision

#### 2.1. ROI and Handling (*Most Important Ones*)

- `polyroi`: GUI to create a polygonal region of interest (ROI)
- `crop_image`: GUI to create a rectangular crop in an image
- `crop_multiple`: crops multiple images using the same crop from 1st image
- `crop_poly_multiple`: polygonal crop multiple images based on 1st cropping
- `choose_points`: GUI to interact with the user to choose points in an image
- `imchoose`: function to choose images in a given set of images (with GUI)
- `imroiprop`: getting properties from an image ROI
- `roi_stats`: get statistics (mean and std) from images of multiple a experiments (important!)
    
    
#### 2.2. Image Alignment and Transformation

- `rotate2D`: rotate points by an angle about a center
- `flat2im`: transforms a flat vector into a 2D image
- `im2flat`: transforms a 2D image in a flat vector
- `im2label`: GUI to transform images in labels for image segmentation (very automated function)
- `scale255`: scales an image to the [0, 255] range
- `align_features`: Align images with Feature-Based algorithm, from OpenCV (maybe not working)
- `align_ECC`: image alignment using ECC algorithm from OpenCV (diffuse image)
- `imwarp`: function to warp a set of images using a warp matrix (maybe not working)
    
    
### 3. Filtering Images and Signals

- `filter_finder`: study and find which filter to use (for signals, 1D)
- `highpass_gauss`: high-pass Gaussian filter for images (2D)
- `highpass_fft`: high-pass image (2D) filter based on FFT
- `lowpass_fft`: low-pass image (2D) filter based on FFT
- `filt_hist`: filtering histograms with zero/null values (removing zeros)


### 4. Bonus Functions

- `beep`: making 'beeps' to help warn when a long algorithm has finished
- `isoareas`: complex function to measure pixels' intensity in adjacent areas. This is a very specific function to process fluorescence intensities of cells in confocal microscopy images
- `good_colormaps`: visualizing the best Matplotlib colormaps in an image
- `improfile`: finds the pixels' intensity profile between two points (GUI) (maybe not working)
    

## How to Install

You can install using `pip`:

```
pip install image-functions
```

*OBS*: some functions use the 'pynput' and 'windsound' libraries, which may be difficult to install and do not works on non-windows platforms. Comment on these library imports if there are problems during installation or loading.

- author: Marlon Rodrigues Garcia
- contact: marlon.garcia@unesp.br
- institution: Sao Paulo State University (Unesp)


### Scientific Research

This work is the product of the research being conducted at two universities in Brazil:

#### Sao Paulo State University (Unesp)
- Dept. of Electronic and Telecommunication Engineering
- School of Engineering, Campus of Sao Joao da Boa Vista
- website: https://www.sjbv.unesp.br/

#### University of São Paulo (USP)
- Biophotonics Laboratory, Optics Group (GO)
- São Carlos Institute of Physics (IFSC)
- website: https://www2.ifsc.usp.br/english/
